//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("StatesModel", "FK_County_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StatesMVCAjaxDemo_CSharp.Models.State), "County", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StatesMVCAjaxDemo_CSharp.Models.County), true)]

#endregion

namespace StatesMVCAjaxDemo_CSharp.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class StatesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new StatesEntities object using the connection string found in the 'StatesEntities' section of the application configuration file.
        /// </summary>
        public StatesEntities() : base("name=StatesEntities", "StatesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StatesEntities object.
        /// </summary>
        public StatesEntities(string connectionString) : base(connectionString, "StatesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new StatesEntities object.
        /// </summary>
        public StatesEntities(EntityConnection connection) : base(connection, "StatesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<County> Counties
        {
            get
            {
                if ((_Counties == null))
                {
                    _Counties = base.CreateObjectSet<County>("Counties");
                }
                return _Counties;
            }
        }
        private ObjectSet<County> _Counties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Counties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCounties(County county)
        {
            base.AddObject("Counties", county);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StatesModel", Name="County")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class County : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new County object.
        /// </summary>
        /// <param name="countyID">Initial value of the countyID property.</param>
        /// <param name="stateID">Initial value of the stateID property.</param>
        public static County CreateCounty(global::System.Int32 countyID, global::System.Int32 stateID)
        {
            County county = new County();
            county.countyID = countyID;
            county.stateID = stateID;
            return county;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 countyID
        {
            get
            {
                return _countyID;
            }
            set
            {
                if (_countyID != value)
                {
                    OncountyIDChanging(value);
                    ReportPropertyChanging("countyID");
                    _countyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("countyID");
                    OncountyIDChanged();
                }
            }
        }
        private global::System.Int32 _countyID;
        partial void OncountyIDChanging(global::System.Int32 value);
        partial void OncountyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 stateID
        {
            get
            {
                return _stateID;
            }
            set
            {
                OnstateIDChanging(value);
                ReportPropertyChanging("stateID");
                _stateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("stateID");
                OnstateIDChanged();
            }
        }
        private global::System.Int32 _stateID;
        partial void OnstateIDChanging(global::System.Int32 value);
        partial void OnstateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String countyName
        {
            get
            {
                return _countyName;
            }
            set
            {
                OncountyNameChanging(value);
                ReportPropertyChanging("countyName");
                _countyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("countyName");
                OncountyNameChanged();
            }
        }
        private global::System.String _countyName;
        partial void OncountyNameChanging(global::System.String value);
        partial void OncountyNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StatesModel", "FK_County_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("StatesModel.FK_County_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("StatesModel.FK_County_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("StatesModel.FK_County_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("StatesModel.FK_County_State", "State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="StatesModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stateID">Initial value of the stateID property.</param>
        /// <param name="stateName">Initial value of the stateName property.</param>
        /// <param name="stateAbbr">Initial value of the stateAbbr property.</param>
        public static State CreateState(global::System.Int32 stateID, global::System.String stateName, global::System.String stateAbbr)
        {
            State state = new State();
            state.stateID = stateID;
            state.stateName = stateName;
            state.stateAbbr = stateAbbr;
            return state;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 stateID
        {
            get
            {
                return _stateID;
            }
            set
            {
                if (_stateID != value)
                {
                    OnstateIDChanging(value);
                    ReportPropertyChanging("stateID");
                    _stateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("stateID");
                    OnstateIDChanged();
                }
            }
        }
        private global::System.Int32 _stateID;
        partial void OnstateIDChanging(global::System.Int32 value);
        partial void OnstateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stateName
        {
            get
            {
                return _stateName;
            }
            set
            {
                OnstateNameChanging(value);
                ReportPropertyChanging("stateName");
                _stateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("stateName");
                OnstateNameChanged();
            }
        }
        private global::System.String _stateName;
        partial void OnstateNameChanging(global::System.String value);
        partial void OnstateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stateAbbr
        {
            get
            {
                return _stateAbbr;
            }
            set
            {
                OnstateAbbrChanging(value);
                ReportPropertyChanging("stateAbbr");
                _stateAbbr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("stateAbbr");
                OnstateAbbrChanged();
            }
        }
        private global::System.String _stateAbbr;
        partial void OnstateAbbrChanging(global::System.String value);
        partial void OnstateAbbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String stateCapital
        {
            get
            {
                return _stateCapital;
            }
            set
            {
                OnstateCapitalChanging(value);
                ReportPropertyChanging("stateCapital");
                _stateCapital = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("stateCapital");
                OnstateCapitalChanged();
            }
        }
        private global::System.String _stateCapital;
        partial void OnstateCapitalChanging(global::System.String value);
        partial void OnstateCapitalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String stateTree
        {
            get
            {
                return _stateTree;
            }
            set
            {
                OnstateTreeChanging(value);
                ReportPropertyChanging("stateTree");
                _stateTree = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("stateTree");
                OnstateTreeChanged();
            }
        }
        private global::System.String _stateTree;
        partial void OnstateTreeChanging(global::System.String value);
        partial void OnstateTreeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String stateFlower
        {
            get
            {
                return _stateFlower;
            }
            set
            {
                OnstateFlowerChanging(value);
                ReportPropertyChanging("stateFlower");
                _stateFlower = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("stateFlower");
                OnstateFlowerChanged();
            }
        }
        private global::System.String _stateFlower;
        partial void OnstateFlowerChanging(global::System.String value);
        partial void OnstateFlowerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String stateBird
        {
            get
            {
                return _stateBird;
            }
            set
            {
                OnstateBirdChanging(value);
                ReportPropertyChanging("stateBird");
                _stateBird = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("stateBird");
                OnstateBirdChanged();
            }
        }
        private global::System.String _stateBird;
        partial void OnstateBirdChanging(global::System.String value);
        partial void OnstateBirdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String stateRegion
        {
            get
            {
                return _stateRegion;
            }
            set
            {
                OnstateRegionChanging(value);
                ReportPropertyChanging("stateRegion");
                _stateRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("stateRegion");
                OnstateRegionChanged();
            }
        }
        private global::System.String _stateRegion;
        partial void OnstateRegionChanging(global::System.String value);
        partial void OnstateRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String stateImageFlag
        {
            get
            {
                return _stateImageFlag;
            }
            set
            {
                OnstateImageFlagChanging(value);
                ReportPropertyChanging("stateImageFlag");
                _stateImageFlag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("stateImageFlag");
                OnstateImageFlagChanged();
            }
        }
        private global::System.String _stateImageFlag;
        partial void OnstateImageFlagChanging(global::System.String value);
        partial void OnstateImageFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String stateImageSeal
        {
            get
            {
                return _stateImageSeal;
            }
            set
            {
                OnstateImageSealChanging(value);
                ReportPropertyChanging("stateImageSeal");
                _stateImageSeal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("stateImageSeal");
                OnstateImageSealChanged();
            }
        }
        private global::System.String _stateImageSeal;
        partial void OnstateImageSealChanging(global::System.String value);
        partial void OnstateImageSealChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("StatesModel", "FK_County_State", "County")]
        public EntityCollection<County> Counties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<County>("StatesModel.FK_County_State", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<County>("StatesModel.FK_County_State", "County", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
